plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.github.spotbugs" version "5.0.5"
	id 'jacoco'
}

group = 'de.exxcellent'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
		vendor = JvmVendorSpec.ADOPTIUM
	}
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.ibm.cloud:cloudant:0.1.2'
	implementation 'com.github.spotbugs:spotbugs-annotations:4.7.0'

	implementation 'io.swagger.core.v3:swagger-annotations:2.2.0'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.8'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation ('org.openapitools:openapi-generator:6.0.0-beta') {
		exclude group: 'io.swagger.core.v3', module: 'swagger-models' // conflict with swagger-annotations
	}
	testImplementation ('org.openapitools:openapi-generator-cli:6.0.0-beta') {
		exclude group: 'io.swagger.core.v3', module: 'swagger-models' // conflict with swagger-annotations
	}

	spotbugsSlf4j 'org.slf4j:slf4j-simple:1.7.36'
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.12.0'

	spotbugsPlugins 'com.mebigfatguy.sb-contrib:sb-contrib:7.4.7'
}

test {
	useJUnitPlatform()
	filter {
		excludeTestsMatching "de.bsi.secvisogram.csaf_cms_backend.OpenApiGenerateDocuTest"
	}
}

task apiDocumentation(type: Test, description: "generates the API documentation") {
	useJUnitPlatform()
	filter {
		includeTestsMatching "de.bsi.secvisogram.csaf_cms_backend.OpenApiGenerateDocuTest"
	}
}


jacoco {
	toolVersion = "0.8.7"
//	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}


jacocoTestReport {
	reports {
		xml.required = true
		csv.required = true
		html.outputLocation = layout.buildDirectory.dir('reports/jacocoHtml')
	}
}



spotbugs {
	ignoreFailures = false
	showStackTraces = true
	showProgress = true
	effort = 'default'
	reportLevel = 'default'
//	visitors = [ 'FindSqlInjection', 'SwitchFallthrough' ]
//	omitVisitors = [ 'FindNonShortCircuit' ]
	reportsDir = file("$buildDir/spotbugs")
//	onlyAnalyze = [ 'com.foobar.MyClass', 'com.foobar.mypkg.*' ]
	maxHeapSize = '1g'
	extraArgs = [ '-nested:false' ]
	jvmArgs = [ '-Duser.language=de' ]
}


spotbugsMain {
	reports {
		html {
			required = true
			outputLocation = file("$buildDir/reports/spotbugs/main/spotbugsMain.html")
			stylesheet = 'fancy-hist.xsl'
		}
		xml {
			required = true
			outputLocation = file("$buildDir/reports/spotbugs/xml/spotbugsMain.xml")
		}

	}
}

spotbugsTest {
	reports {
		html {
			required = true
			outputLocation = file("$buildDir/reports/spotbugs/main/spotbugsTest.html")
			stylesheet = 'fancy-hist.xsl'
		}
		xml {
			required = true
			outputLocation = file("$buildDir/reports/spotbugs/xml/spotbugsTest.xml")
		}

	}
}