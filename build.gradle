plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.github.spotbugs" version "5.0.5"
	id 'jacoco'
}

group = 'de.exxcellent'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}



dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-couchbase'
	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.10.1'
}

test {
	useJUnitPlatform()
}



jacoco {
	toolVersion = "0.8.7"
//	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}


jacocoTestReport {
	reports {
		xml.required = true
		csv.required = true
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}



spotbugs {
	ignoreFailures = false
	showStackTraces = true
	showProgress = true
	effort = 'default'
	reportLevel = 'default'
//	visitors = [ 'FindSqlInjection', 'SwitchFallthrough' ]
//	omitVisitors = [ 'FindNonShortCircuit' ]
	reportsDir = file("$buildDir/spotbugs")
//	onlyAnalyze = [ 'com.foobar.MyClass', 'com.foobar.mypkg.*' ]
	maxHeapSize = '1g'
	extraArgs = [ '-nested:false' ]
	jvmArgs = [ '-Duser.language=de' ]
}

// Example to configure HTML report
spotbugsMain {
	reports {
		html {
			required = true
			outputLocation = file("$buildDir/reports/spotbugs/main/spotbugs.html")
			stylesheet = 'fancy-hist.xsl'
		}
		xml {
			required = true
			outputLocation = file("$buildDir/reports/spotbugs/xml/spotbugs.xml")
		}

	}
}